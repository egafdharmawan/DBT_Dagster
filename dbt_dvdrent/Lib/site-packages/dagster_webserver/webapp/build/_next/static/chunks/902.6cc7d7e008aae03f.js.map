{"version":3,"file":"static/chunks/902.6cc7d7e008aae03f.js","mappings":"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","sources":["webpack://_N_E/../../node_modules/d3-shape/src/link/index.js","webpack://_N_E/../../node_modules/lodash/memoize.js","webpack://_N_E/../../node_modules/@swc/helpers/esm/_array_with_holes.js","webpack://_N_E/../../node_modules/@swc/helpers/esm/_iterable_to_array_limit.js","webpack://_N_E/../../node_modules/@swc/helpers/esm/_non_iterable_rest.js","webpack://_N_E/../../node_modules/@swc/helpers/esm/_array_like_to_array.js","webpack://_N_E/../../node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","webpack://_N_E/../../node_modules/@swc/helpers/esm/_sliced_to_array.js","webpack://_N_E/../../node_modules/@swc/helpers/esm/_array_without_holes.js","webpack://_N_E/../../node_modules/@swc/helpers/esm/_iterable_to_array.js","webpack://_N_E/../../node_modules/@swc/helpers/esm/_non_iterable_spread.js","webpack://_N_E/../../node_modules/@swc/helpers/esm/_to_consumable_array.js","webpack://_N_E/../ui-core/src/hooks/useStateWithStorage.tsx","webpack://_N_E/../ui-core/src/app/Flags.tsx","webpack://_N_E/../ui-core/src/app/Util.tsx","webpack://_N_E/../ui-core/src/asset-graph/Utils.tsx","webpack://_N_E/../ui-core/src/asset-graph/layout.ts","webpack://_N_E/../ui-core/src/app/titleOfIO.ts","webpack://_N_E/../ui-core/src/graph/layout.ts","webpack://_N_E/../ui-core/src/workers/dagre_layout.worker.ts","webpack://_N_E/<anon>"],"sourcesContent":["import {path} from \"d3-path\";\nimport {slice} from \"../array.js\";\nimport constant from \"../constant.js\";\nimport {x as pointX, y as pointY} from \"../point.js\";\nimport pointRadial from \"../pointRadial.js\";\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x = pointX,\n      y = pointY,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = path();\n    curve(context, +x.apply(this, (argv[0] = s, argv)), +y.apply(this, argv), +x.apply(this, (argv[0] = t, argv)), +y.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), link) : x;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), link) : y;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial(context, x0, y0, x1, y1) {\n  var p0 = pointRadial(x0, y0),\n      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n      p2 = pointRadial(x1, y0),\n      p3 = pointRadial(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nexport function linkHorizontal() {\n  return link(curveHorizontal);\n}\n\nexport function linkVertical() {\n  return link(curveVertical);\n}\n\nexport function linkRadial() {\n  var l = link(curveRadial);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n","var MapCache = require('./_MapCache');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nmodule.exports = memoize;\n","export function _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nexport { _array_with_holes as _ };\n","export function _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n    if (_i == null) return;\n\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n\n    try {\n        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally {\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally {\n            if (_d) throw _e;\n        }\n    }\n\n    return _arr;\n}\nexport { _iterable_to_array_limit as _ };\n","export function _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_rest as _ };\n","export function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","import { _array_with_holes } from \"./_array_with_holes.js\";\nimport { _iterable_to_array_limit } from \"./_iterable_to_array_limit.js\";\nimport { _non_iterable_rest } from \"./_non_iterable_rest.js\";\nimport { _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nexport function _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nexport { _sliced_to_array as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","export function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","export function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _array_without_holes } from \"./_array_without_holes.js\";\nimport { _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nexport function _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import React from 'react';\n\nexport function getJSONForKey(key: string) {\n  let stored = undefined;\n  try {\n    stored = window.localStorage.getItem(key);\n    if (stored) {\n      return JSON.parse(stored);\n    }\n  } catch (err) {\n    if (typeof stored === 'string') {\n      // With useStateWithStorage, some values like timezone are moving from `UTC` to `\"UTC\"`\n      // in LocalStorage. To read the old values, pass through raw string values. We can\n      // remove this a few months after 0.14.1 is released.\n      return stored;\n    }\n    return undefined;\n  }\n}\n\nconst DID_WRITE_LOCALSTORAGE = '';\n\nexport function useStateWithStorage<T>(key: string, validate: (json: any) => T) {\n  const [version, setVersion] = React.useState(0);\n\n  const validateRef = React.useRef(validate);\n  validateRef.current = validate;\n\n  const listener = React.useCallback(\n    (event: Event) => {\n      if (event instanceof CustomEvent && event.detail === key) {\n        setVersion((v) => v + 1);\n      }\n    },\n    [key],\n  );\n\n  React.useEffect(() => {\n    document.addEventListener(DID_WRITE_LOCALSTORAGE, listener);\n    return () => document.removeEventListener(DID_WRITE_LOCALSTORAGE, listener);\n  }, [listener]);\n\n  // Note: This hook doesn't keep the loaded data in state -- instead it uses a version bit and\n  // a ref to load the value from localStorage when the `key` changes or when the `version` changes.\n  // This allows us to immediately return the saved value for `key` in the same render.\n\n  const state = React.useMemo(() => {\n    return validate(getJSONForKey(key));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [validate, key, version]);\n\n  const setState = React.useCallback(\n    (input: React.SetStateAction<T>) => {\n      const next =\n        input instanceof Function ? input(validateRef.current(getJSONForKey(key))) : input;\n      if (next === undefined) {\n        window.localStorage.removeItem(key);\n      } else {\n        window.localStorage.setItem(key, JSON.stringify(next));\n      }\n      document.removeEventListener(DID_WRITE_LOCALSTORAGE, listener);\n      document.dispatchEvent(new CustomEvent(DID_WRITE_LOCALSTORAGE, {detail: key}));\n      document.addEventListener(DID_WRITE_LOCALSTORAGE, listener);\n\n      setVersion((v) => v + 1);\n\n      return next;\n    },\n    [key, listener],\n  );\n\n  const value = React.useMemo(() => [state, setState], [state, setState]);\n  return value as [T, React.Dispatch<React.SetStateAction<T | undefined>>];\n}\n","import memoize from 'lodash/memoize';\nimport * as React from 'react';\n\nimport {getJSONForKey} from '../hooks/useStateWithStorage';\n\nexport const DAGSTER_FLAGS_KEY = 'DAGSTER_FLAGS';\n\n// Use const because we need to extend this in cloud. https://blog.logrocket.com/extend-enums-typescript/\nexport const FeatureFlag = {\n  flagDebugConsoleLogging: 'flagDebugConsoleLogging' as const,\n  flagDisableWebsockets: 'flagDisableWebsockets' as const,\n  flagSidebarResources: 'flagSidebarResources' as const,\n  flagDisableAutoLoadDefaults: 'flagDisableAutoLoadDefaults' as const,\n};\nexport type FeatureFlagType = keyof typeof FeatureFlag;\n\nexport const getFeatureFlags: () => FeatureFlagType[] = memoize(\n  () => getJSONForKey(DAGSTER_FLAGS_KEY) || [],\n);\n\nexport const featureEnabled = memoize((flag: FeatureFlagType) => getFeatureFlags().includes(flag));\n\ntype FlagMap = {\n  readonly [F in FeatureFlagType]: boolean;\n};\n\nexport const useFeatureFlags = () => {\n  return React.useMemo(() => {\n    const flagSet = new Set(getFeatureFlags());\n    const all: Record<string, boolean> = {};\n    for (const flag in FeatureFlag) {\n      all[flag] = flagSet.has(flag as FeatureFlagType);\n    }\n    return all as FlagMap;\n  }, []);\n};\n\nexport const setFeatureFlags = (flags: FeatureFlagType[]) => {\n  if (!(flags instanceof Array)) {\n    throw new Error('flags must be an array');\n  }\n  localStorage.setItem(DAGSTER_FLAGS_KEY, JSON.stringify(flags));\n};\n","import {cache} from 'idb-lru-cache';\nimport memoize from 'lodash/memoize';\nimport LRU from 'lru-cache';\n\nimport {featureEnabled, FeatureFlag} from './Flags';\nimport {timeByParts} from './timeByParts';\n\nfunction twoDigit(v: number) {\n  return `${v < 10 ? '0' : ''}${v}`;\n}\n\nfunction indexesOf(string: string, search: RegExp | string) {\n  const indexes: number[] = [];\n  const regexp = new RegExp(search, 'g');\n  let match = null;\n  while ((match = regexp.exec(string))) {\n    indexes.push(match.index);\n  }\n  return indexes;\n}\n\nexport const withMiddleTruncation = (text: string, options: {maxLength: number}) => {\n  const overflowLength = text.length - options.maxLength;\n  if (overflowLength <= 0) {\n    // No truncation is necessary\n    return text;\n  }\n  if (options.maxLength <= 10) {\n    // Middle truncation to this few characters (eg: abc…ef) is kind of silly\n    // and just using abcde… looks better.\n    return text.substring(0, options.maxLength - 1) + '…';\n  }\n\n  // Find all the breakpoints in the string\n  //   \"my_great_long_solid_name\"\n  //     ˄     ˄    ˄     ˄\n  const breakpoints = text.includes('__') ? indexesOf(text, /__/g) : indexesOf(text, /[_>\\.-]/g);\n\n  // Given no breakpoints, slice out the middle of the string. Adding\n  // the overflowLength here gives us the END point of the truncated region.\n  //\n  //   \"abc(defg)hijk\"\n  //            ˄\n  let breakpoint = Math.floor((text.length + overflowLength) / 2);\n\n  // Find the first breakpoint that exists AFTER enough characters that we could show\n  // at least three prefix letters after cutting out overflowLength.\n  const firstUsableIdx = breakpoints.findIndex((bp) => bp > overflowLength + 3);\n\n  if (firstUsableIdx !== -1) {\n    // If we found a usable breakpoint, see if we could instead choose the middle\n    // breakpoint which would give us more prefix. All else equal,\n    // \"my_great_l…_name\" looks better than \"my_g…_solid_name\"\n    const middleIdx = Math.floor(breakpoints.length / 2);\n    const breakpointAtIndex = breakpoints[Math.max(firstUsableIdx, middleIdx)];\n    if (breakpointAtIndex !== undefined) {\n      breakpoint = breakpointAtIndex;\n    }\n  }\n\n  const result = [\n    text.substring(0, breakpoint - (overflowLength + 1)),\n    text.substring(breakpoint),\n  ].join('…');\n\n  return result;\n};\n\nconst msecFormatter = memoize((locale: string) => {\n  return new Intl.NumberFormat(locale, {\n    minimumFractionDigits: 3,\n    maximumFractionDigits: 3,\n  });\n});\n\n/**\n * Return an i18n-formatted millisecond in seconds as a decimal, with no leading zero.\n */\nconst formatMsecMantissa = (msec: number) =>\n  msecFormatter(navigator.language)\n    .format(msec / 1000)\n    .slice(-4);\n\n/**\n * Format the time without milliseconds, rounding to :01 for non-zero value within (-1, 1)\n */\nexport const formatElapsedTimeWithoutMsec = (msec: number) => {\n  const {hours, minutes, seconds} = timeByParts(msec);\n  const negative = msec < 0;\n  const roundedSeconds = msec !== 0 && msec < 1000 && msec > -1000 ? 1 : seconds;\n  return `${negative ? '-' : ''}${hours}:${twoDigit(minutes)}:${twoDigit(roundedSeconds)}`;\n};\n\nexport const formatElapsedTimeWithMsec = (msec: number) => {\n  const {hours, minutes, seconds, milliseconds} = timeByParts(msec);\n  const negative = msec < 0;\n  return `${negative ? '-' : ''}${hours}:${twoDigit(minutes)}:${twoDigit(\n    seconds,\n  )}${formatMsecMantissa(milliseconds)}`;\n};\n\nexport function breakOnUnderscores(str: string) {\n  return str.replace(/_/g, '_\\u200b');\n}\n\nexport function patchCopyToRemoveZeroWidthUnderscores() {\n  document.addEventListener('copy', (event) => {\n    if (!event.clipboardData) {\n      // afaik this is always defined, but the TS field is optional\n      return;\n    }\n\n    // Note: This returns the text of the current selection if DOM\n    // nodes are selected. If the selection on the page is text within\n    // codemirror or an input or textarea, this returns \"\" and we fall\n    // through to the default pasteboard content.\n    const text = (window.getSelection() || '').toString().replace(/_\\u200b/g, '_');\n\n    if (text.length) {\n      event.preventDefault();\n      event.clipboardData.setData('Text', text);\n    }\n  });\n}\n\nexport function asyncMemoize<T, R, U extends (arg: T, ...rest: any[]) => PromiseLike<R>>(\n  fn: U,\n  hashFn?: (arg: T, ...rest: any[]) => any,\n  hashSize?: number,\n): U {\n  const cache = new LRU(hashSize || 50);\n  return (async (arg: T, ...rest: any[]) => {\n    const key = hashFn ? hashFn(arg, ...rest) : arg;\n    if (cache.has(key)) {\n      return Promise.resolve(cache.get(key) as R);\n    }\n    const r = (await fn(arg, ...rest)) as R;\n    cache.set(key, r);\n    return r;\n  }) as any;\n}\n\nexport function indexedDBAsyncMemoize<T, R, U extends (arg: T, ...rest: any[]) => Promise<R>>(\n  fn: U,\n  hashFn?: (arg: T, ...rest: any[]) => any,\n): U & {\n  isCached: (arg: T, ...rest: any[]) => Promise<boolean>;\n} {\n  const lru = cache<string, R>({\n    dbName: 'indexDBAsyncMemoizeDB',\n    maxCount: 50,\n  });\n\n  async function genHashKey(arg: T, ...rest: any[]) {\n    const hash = hashFn ? hashFn(arg, ...rest) : arg;\n\n    const encoder = new TextEncoder();\n    // Crypto.subtle isn't defined in insecure contexts... fallback to using the full string as a key\n    // https://stackoverflow.com/questions/46468104/how-to-use-subtlecrypto-in-chrome-window-crypto-subtle-is-undefined\n    if (crypto.subtle?.digest) {\n      const data = encoder.encode(hash.toString());\n      const hashBuffer = await crypto.subtle.digest('SHA-1', data);\n      const hashArray = Array.from(new Uint8Array(hashBuffer)); // convert buffer to byte array\n      return hashArray.map((b) => b.toString(16).padStart(2, '0')).join(''); // convert bytes to hex string\n    }\n    return hash.toString();\n  }\n\n  const ret = (async (arg: T, ...rest: any[]) => {\n    return new Promise<R>(async (resolve) => {\n      const hashKey = await genHashKey(arg, ...rest);\n      if (await lru.has(hashKey)) {\n        const {value} = await lru.get(hashKey);\n        resolve(value);\n        return;\n      }\n\n      const result = await fn(arg, ...rest);\n      // Resolve the promise before storing the result in IndexedDB\n      resolve(result);\n      await lru.set(hashKey, result, {\n        // Some day in the year 2050...\n        expiry: new Date(9 ** 13),\n      });\n    });\n  }) as any;\n  ret.isCached = async (arg: T, ...rest: any) => {\n    const hashKey = await genHashKey(arg, ...rest);\n    return await lru.has(hashKey);\n  };\n  return ret;\n}\n\n// Simple memoization function for methods that take a single object argument.\n// Returns a memoized copy of the provided function which retrieves the result\n// from a cache after the first invocation with a given object.\n//\n// Uses WeakMap to tie the lifecycle of the cache to the lifecycle of the\n// object argument.\n//\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function weakmapMemoize<T extends object, R>(\n  fn: (arg: T, ...rest: any[]) => R,\n): (arg: T, ...rest: any[]) => R {\n  const cache = new WeakMap();\n  return (arg: T, ...rest: any[]) => {\n    if (cache.has(arg)) {\n      return cache.get(arg);\n    }\n    const r = fn(arg, ...rest);\n    cache.set(arg, r);\n    return r;\n  };\n}\n\nexport function assertUnreachable(value: never): never {\n  throw new Error(`Didn't expect to get here with value: ${JSON.stringify(value)}`);\n}\n\nexport function debugLog(...args: any[]) {\n  if (featureEnabled(FeatureFlag.flagDebugConsoleLogging)) {\n    console.log(...args);\n  }\n}\n\nexport function colorHash(str: string) {\n  let seed = 0;\n  for (let i = 0; i < str.length; i++) {\n    seed = ((seed << 5) - seed + str.charCodeAt(i)) | 0;\n  }\n\n  const random255 = (x: number) => {\n    const value = Math.sin(x) * 10000;\n    return 255 * (value - Math.floor(value));\n  };\n\n  return `rgb(${random255(seed++)}, ${random255(seed++)}, ${random255(seed++)})`;\n}\n\n// Useful for generating predicates to retain type information when\n// find/filtering GraphQL results. Example:\n//\n// const textMetadata = metadataEntries.filter(gqlTypePredicate('TextMetadataEntry'));\n//\n// `textMetadata` will be of type `TextMetadataEntry[]`.\nexport const gqlTypePredicate =\n  <T extends string>(typename: T) =>\n  <N extends {__typename: string}>(node: N): node is Extract<N, {__typename: T}> => {\n    return node.__typename === typename;\n  };\n\nexport const COMMON_COLLATOR = new Intl.Collator(navigator.language, {sensitivity: 'base'});\n","import {pathHorizontalDiagonal} from '@vx/shape';\nimport memoize from 'lodash/memoize';\n\nimport {COMMON_COLLATOR} from '../app/Util';\nimport {\n  AssetGraphLiveQuery,\n  AssetLatestInfoFragment,\n  AssetLatestInfoRunFragment,\n  AssetNodeLiveFragment,\n  AssetNodeLiveFreshnessInfoFragment,\n  AssetNodeLiveMaterializationFragment,\n  AssetNodeLiveObservationFragment,\n  AssetCheckLiveFragment,\n} from '../asset-data/types/AssetLiveDataProvider.types';\nimport {RunStatus, StaleStatus} from '../graphql/types';\n\nimport {AssetNodeKeyFragment} from './types/AssetNode.types';\nimport {AssetNodeForGraphQueryFragment} from './types/useAssetGraphData.types';\n\ntype AssetNode = AssetNodeForGraphQueryFragment;\ntype AssetKey = AssetNodeKeyFragment;\ntype AssetLiveNode = AssetNodeLiveFragment;\ntype AssetLatestInfo = AssetLatestInfoFragment;\n\nexport const __ASSET_JOB_PREFIX = '__ASSET_JOB';\n\nexport function isHiddenAssetGroupJob(jobName: string) {\n  return jobName.startsWith(__ASSET_JOB_PREFIX);\n}\n\n// IMPORTANT: We use this, rather than AssetNode.id throughout this file because\n// the GraphQL interface exposes dependencyKeys, not dependencyIds. We also need\n// ways to \"build\" GraphId's locally, they can't always be server-provided.\n//\n// This value is NOT the same as AssetNode.id values provided by the server,\n// because JSON.stringify's whitespace behavior is different than Python's.\n//\nexport type GraphId = string;\nexport const toGraphId = (key: {path: string[]}): GraphId => JSON.stringify(key.path);\nexport const fromGraphID = (graphId: GraphId): AssetNodeKeyFragment => ({\n  path: JSON.parse(graphId),\n  __typename: 'AssetKey',\n});\n\nexport interface GraphNode {\n  id: GraphId;\n  assetKey: AssetKey;\n  definition: AssetNode;\n}\n\nexport interface GraphData {\n  nodes: {[assetId: GraphId]: GraphNode};\n  downstream: {[assetId: GraphId]: {[childAssetId: GraphId]: boolean}};\n  upstream: {[assetId: GraphId]: {[parentAssetId: GraphId]: boolean}};\n  expandedGroups?: string[];\n}\n\nexport const buildGraphData = (assetNodes: AssetNode[]) => {\n  const data: GraphData = {\n    nodes: {},\n    downstream: {},\n    upstream: {},\n  };\n\n  const addEdge = (upstreamGraphId: string, downstreamGraphId: string) => {\n    if (upstreamGraphId === downstreamGraphId) {\n      // Skip add edges for self-dependencies (eg: assets relying on older partitions of themselves)\n      return;\n    }\n    data.downstream[upstreamGraphId] = {\n      ...(data.downstream[upstreamGraphId] || {}),\n      [downstreamGraphId]: true,\n    };\n    data.upstream[downstreamGraphId] = {\n      ...(data.upstream[downstreamGraphId] || {}),\n      [upstreamGraphId]: true,\n    };\n  };\n\n  assetNodes.forEach((definition: AssetNode) => {\n    const id = toGraphId(definition.assetKey);\n    definition.dependencyKeys.forEach((key) => {\n      addEdge(toGraphId(key), id);\n    });\n    definition.dependedByKeys.forEach((key) => {\n      addEdge(id, toGraphId(key));\n    });\n\n    data.nodes[id] = {\n      id,\n      assetKey: definition.assetKey,\n      definition,\n    };\n  });\n\n  return data;\n};\n\nexport const nodeDependsOnSelf = (node: GraphNode) => {\n  const id = toGraphId(node.assetKey);\n  return node.definition.dependedByKeys.some((d) => toGraphId(d) === id);\n};\n\nexport const graphHasCycles = (graphData: GraphData) => {\n  const nodes = new Set(Object.keys(graphData.nodes));\n  const search = (stack: string[], node: string): boolean => {\n    if (stack.indexOf(node) !== -1) {\n      return true;\n    }\n    if (nodes.delete(node) === true) {\n      const nextStack = stack.concat(node);\n      return Object.keys(graphData.downstream[node] || {}).some((nextNode) =>\n        search(nextStack, nextNode),\n      );\n    }\n    return false;\n  };\n  let hasCycles = false;\n  while (nodes.size !== 0 && !hasCycles) {\n    hasCycles = search([], nodes.values().next().value);\n  }\n  return hasCycles;\n};\n\nexport const buildSVGPath = pathHorizontalDiagonal({\n  source: (s: any) => s.source,\n  target: (s: any) => s.target,\n  x: (s: any) => s.x,\n  y: (s: any) => s.y,\n});\n\nexport interface LiveDataForNode {\n  stepKey: string;\n  unstartedRunIds: string[]; // run in progress and step not started\n  inProgressRunIds: string[]; // run in progress and step in progress\n  runWhichFailedToMaterialize: AssetLatestInfoRunFragment | null;\n  lastMaterialization: AssetNodeLiveMaterializationFragment | null;\n  lastMaterializationRunStatus: RunStatus | null; // only available if runWhichFailedToMaterialize is null\n  freshnessInfo: AssetNodeLiveFreshnessInfoFragment | null;\n  lastObservation: AssetNodeLiveObservationFragment | null;\n  staleStatus: StaleStatus | null;\n  staleCauses: AssetGraphLiveQuery['assetNodes'][0]['staleCauses'];\n  assetChecks: AssetCheckLiveFragment[];\n  partitionStats: {\n    numMaterialized: number;\n    numMaterializing: number;\n    numPartitions: number;\n    numFailed: number;\n  } | null;\n  opNames: string[];\n}\n\nexport const MISSING_LIVE_DATA: LiveDataForNode = {\n  unstartedRunIds: [],\n  inProgressRunIds: [],\n  runWhichFailedToMaterialize: null,\n  freshnessInfo: null,\n  lastMaterialization: null,\n  lastMaterializationRunStatus: null,\n  lastObservation: null,\n  partitionStats: null,\n  staleStatus: null,\n  staleCauses: [],\n  assetChecks: [],\n  opNames: [],\n  stepKey: '',\n};\n\nexport interface LiveData {\n  [assetId: GraphId]: LiveDataForNode;\n}\n\nexport const buildLiveData = ({\n  assetNodes,\n  assetsLatestInfo,\n}: Pick<AssetGraphLiveQuery, 'assetNodes' | 'assetsLatestInfo'>) => {\n  const data: LiveData = {};\n\n  for (const liveNode of assetNodes) {\n    const graphId = toGraphId(liveNode.assetKey);\n    const assetLatestInfo = assetsLatestInfo.find(\n      (r) => JSON.stringify(r.assetKey) === JSON.stringify(liveNode.assetKey),\n    );\n\n    data[graphId] = buildLiveDataForNode(liveNode, assetLatestInfo);\n  }\n\n  return data;\n};\n\nexport const buildLiveDataForNode = (\n  assetNode: AssetLiveNode,\n  assetLatestInfo?: AssetLatestInfo,\n): LiveDataForNode => {\n  const lastMaterialization = assetNode.assetMaterializations[0] || null;\n  const lastObservation = assetNode.assetObservations[0] || null;\n  const latestRunForAsset = assetLatestInfo?.latestRun ? assetLatestInfo.latestRun : null;\n\n  const runWhichFailedToMaterialize =\n    (latestRunForAsset?.status === 'FAILURE' &&\n      (!lastMaterialization || lastMaterialization.runId !== latestRunForAsset?.id) &&\n      latestRunForAsset) ||\n    null;\n\n  return {\n    lastMaterialization,\n    lastMaterializationRunStatus:\n      latestRunForAsset && lastMaterialization?.runId === latestRunForAsset?.id\n        ? latestRunForAsset.status\n        : null,\n    lastObservation,\n    assetChecks:\n      assetNode.assetChecksOrError.__typename === 'AssetChecks'\n        ? assetNode.assetChecksOrError.checks\n        : [],\n    staleStatus: assetNode.staleStatus,\n    staleCauses: assetNode.staleCauses,\n    stepKey: stepKeyForAsset(assetNode),\n    freshnessInfo: assetNode.freshnessInfo,\n    inProgressRunIds: assetLatestInfo?.inProgressRunIds || [],\n    unstartedRunIds: assetLatestInfo?.unstartedRunIds || [],\n    partitionStats: assetNode.partitionStats || null,\n    runWhichFailedToMaterialize,\n    opNames: assetNode.opNames,\n  };\n};\n\nexport function tokenForAssetKey(key: {path: string[]}) {\n  return key.path.join('/');\n}\n\nexport function displayNameForAssetKey(key: {path: string[]}) {\n  return key.path.join(' / ');\n}\n\nexport function sortAssetKeys(a: {path: string[]}, b: {path: string[]}) {\n  return COMMON_COLLATOR.compare(displayNameForAssetKey(a), displayNameForAssetKey(b));\n}\n\nexport function stepKeyForAsset(definition: {opNames: string[]}) {\n  // Used for linking to the run with this step highlighted. We only support highlighting\n  // a single step, so just use the first one.\n  const firstOp = definition.opNames.length ? definition.opNames[0] : null;\n  return firstOp || '';\n}\n\nexport const itemWithAssetKey = (key: {path: string[]}) => {\n  const token = tokenForAssetKey(key);\n  return (asset: {assetKey: {path: string[]}}) => tokenForAssetKey(asset.assetKey) === token;\n};\n\nexport const isGroupId = (str: string) => /^[^@:]+@[^@:]+:[^@:]+$/.test(str);\n\nexport const groupIdForNode = (node: GraphNode) =>\n  [\n    node.definition.repository.name,\n    '@',\n    node.definition.repository.location.name,\n    ':',\n    node.definition.groupName,\n  ].join('');\n\n// Inclusive\nexport const getUpstreamNodes = memoize(\n  (assetKey: AssetNodeKeyFragment, graphData: GraphData): AssetNodeKeyFragment[] => {\n    const upstream = Object.keys(graphData.upstream[toGraphId(assetKey)] || {});\n    const currentUpstream = upstream.map((graphId) => fromGraphID(graphId));\n    return [\n      assetKey,\n      ...currentUpstream,\n      ...currentUpstream.map((graphId) => getUpstreamNodes(graphId, graphData)).flat(),\n    ].filter(\n      (key, index, arr) =>\n        // Filter out non uniques\n        arr.findIndex((key2) => JSON.stringify(key2) === JSON.stringify(key)) === index,\n    );\n  },\n  (key, data) => JSON.stringify({key, data}),\n);\n","import * as dagre from 'dagre';\n\nimport {IBounds, IPoint} from '../graph/common';\n\nimport {GraphData, GraphNode, GraphId, groupIdForNode, isGroupId} from './Utils';\n\nexport interface AssetLayout {\n  id: GraphId;\n  bounds: IBounds; // Overall frame of the box relative to 0,0 on the graph\n}\n\nexport interface GroupLayout {\n  id: GraphId;\n  groupName: string;\n  repositoryName: string;\n  repositoryLocationName: string;\n  bounds: IBounds; // Overall frame of the box relative to 0,0 on the graph\n  expanded: boolean;\n}\nexport type AssetLayoutEdge = {\n  from: IPoint;\n  fromId: string;\n  to: IPoint;\n  toId: string;\n};\n\nexport type AssetGraphLayout = {\n  width: number;\n  height: number;\n  edges: AssetLayoutEdge[];\n  nodes: {[id: string]: AssetLayout};\n  groups: {[name: string]: GroupLayout};\n};\nconst MARGIN = 100;\n\nexport type LayoutAssetGraphOptions = {\n  horizontalDAGs: boolean;\n};\n\nexport const layoutAssetGraph = (\n  graphData: GraphData,\n  opts: LayoutAssetGraphOptions,\n): AssetGraphLayout => {\n  const g = new dagre.graphlib.Graph({compound: true});\n\n  const ranker = 'tight-tree';\n\n  g.setGraph(\n    opts.horizontalDAGs\n      ? {\n          rankdir: 'LR',\n          marginx: MARGIN,\n          marginy: MARGIN,\n          nodesep: -10,\n          edgesep: 90,\n          ranksep: 60,\n          ranker,\n        }\n      : {\n          rankdir: 'TB',\n          marginx: MARGIN,\n          marginy: MARGIN,\n          nodesep: 40,\n          edgesep: 10,\n          ranksep: 10,\n          ranker,\n        },\n  );\n  g.setDefaultEdgeLabel(() => ({}));\n\n  // const shouldRender = (node?: GraphNode) => node && node.definition.opNames.length > 0;\n  const shouldRender = (node?: GraphNode) => node;\n  const renderedNodes = Object.values(graphData.nodes).filter(shouldRender);\n  const expandedGroups = graphData.expandedGroups || [];\n\n  // Identify all the groups\n  const groups: {[id: string]: GroupLayout} = {};\n  for (const node of renderedNodes) {\n    if (node.definition.groupName) {\n      const id = groupIdForNode(node);\n      groups[id] = groups[id] || {\n        id,\n        expanded: expandedGroups.includes(id),\n        groupName: node.definition.groupName,\n        repositoryName: node.definition.repository.name,\n        repositoryLocationName: node.definition.repository.location.name,\n        bounds: {x: 0, y: 0, width: 0, height: 0},\n      };\n    }\n  }\n\n  // Add all the group boxes to the graph\n  const groupsPresent = Object.keys(groups).length > 1;\n  if (groupsPresent) {\n    Object.keys(groups).forEach((groupId) => {\n      if (expandedGroups.includes(groupId)) {\n        g.setNode(groupId, {}); // sized based on it's children\n      } else {\n        g.setNode(groupId, {width: 270, height: 110});\n      }\n    });\n  }\n\n  // Add all the nodes inside expanded groups to the graph\n  renderedNodes.forEach((node) => {\n    if (!groupsPresent || expandedGroups.includes(groupIdForNode(node))) {\n      g.setNode(node.id, getAssetNodeDimensions(node.definition));\n      if (groupsPresent && node.definition.groupName) {\n        g.setParent(node.id, groupIdForNode(node));\n      }\n    }\n  });\n\n  const linksToAssetsOutsideGraphedSet: {[id: string]: true} = {};\n  const groupIdForAssetId = Object.fromEntries(\n    Object.entries(graphData.nodes).map(([id, node]) => [id, groupIdForNode(node)]),\n  );\n\n  // Add the edges to the graph, and accumulate a set of \"foreign nodes\" (for which\n  // we have an inbound/outbound edge, but we don't have the `node` in the graphData).\n  Object.entries(graphData.downstream).forEach(([upstreamId, graphDataDownstream]) => {\n    const downstreamIds = Object.keys(graphDataDownstream);\n    downstreamIds.forEach((downstreamId) => {\n      if (\n        !shouldRender(graphData.nodes[downstreamId]) &&\n        !shouldRender(graphData.nodes[upstreamId])\n      ) {\n        return;\n      }\n      let v = upstreamId;\n      let w = downstreamId;\n\n      const wGroup = groupIdForAssetId[downstreamId];\n      if (groupsPresent && wGroup && !expandedGroups.includes(wGroup)) {\n        w = wGroup;\n      }\n      const vGroup = groupIdForAssetId[upstreamId];\n      if (groupsPresent && vGroup && !expandedGroups.includes(vGroup)) {\n        v = vGroup;\n      }\n      if (v === w) {\n        return;\n      }\n\n      g.setEdge({v, w}, {weight: 1});\n\n      if (!shouldRender(graphData.nodes[downstreamId])) {\n        linksToAssetsOutsideGraphedSet[downstreamId] = true;\n      } else if (!shouldRender(graphData.nodes[upstreamId])) {\n        linksToAssetsOutsideGraphedSet[upstreamId] = true;\n      }\n    });\n  });\n\n  // Add all the link nodes to the graph\n  Object.keys(linksToAssetsOutsideGraphedSet).forEach((id) => {\n    const path = JSON.parse(id);\n    const label = path[path.length - 1] || '';\n    g.setNode(id, getAssetLinkDimensions(label, opts));\n  });\n\n  dagre.layout(g);\n\n  let maxWidth = 1;\n  let maxHeight = 1;\n\n  const nodes: {[id: string]: AssetLayout} = {};\n\n  g.nodes().forEach((id) => {\n    const dagreNode = g.node(id);\n    if (!dagreNode?.x || !dagreNode?.width) {\n      return;\n    }\n    const bounds = {\n      x: dagreNode.x - dagreNode.width / 2,\n      y: dagreNode.y - dagreNode.height / 2,\n      width: dagreNode.width,\n      height: dagreNode.height,\n    };\n    if (!isGroupId(id)) {\n      nodes[id] = {id, bounds};\n    } else if (!expandedGroups.includes(id)) {\n      const group = groups[id]!;\n      group.bounds = bounds;\n    }\n\n    maxWidth = Math.max(maxWidth, dagreNode.x + dagreNode.width / 2);\n    maxHeight = Math.max(maxHeight, dagreNode.y + dagreNode.height / 2);\n  });\n\n  // Apply bounds to the groups based on the nodes inside them\n  if (groupsPresent) {\n    for (const node of renderedNodes) {\n      const nodeLayout = nodes[node.id];\n      if (nodeLayout && node.definition.groupName) {\n        const groupId = groupIdForNode(node);\n        const group = groups[groupId]!;\n        group.bounds =\n          group.bounds.width === 0\n            ? nodeLayout.bounds\n            : extendBounds(group.bounds, nodeLayout.bounds);\n      }\n    }\n    for (const group of Object.values(groups)) {\n      if (group.expanded) {\n        group.bounds = padBounds(group.bounds, {x: 15, top: 65, bottom: -15});\n      }\n    }\n  }\n\n  const edges: AssetLayoutEdge[] = [];\n\n  g.edges().forEach((e) => {\n    const v = g.node(e.v);\n    const w = g.node(e.w);\n    if (!v || !w) {\n      return;\n    }\n    const vXInset = !!linksToAssetsOutsideGraphedSet[e.v] ? 16 : 24;\n    const wXInset = !!linksToAssetsOutsideGraphedSet[e.w] ? 16 : 24;\n\n    // Ignore the coordinates from dagre and use the top left + bottom left of the\n    edges.push(\n      opts.horizontalDAGs\n        ? {\n            from: {x: v.x + v.width / 2, y: v.y},\n            fromId: e.v,\n            to: {x: w.x - w.width / 2 - 5, y: w.y},\n            toId: e.w,\n          }\n        : {\n            from: {x: v.x - v.width / 2 + vXInset, y: v.y - 30 + v.height / 2},\n            fromId: e.v,\n            to: {x: w.x - w.width / 2 + wXInset, y: w.y + 20 - w.height / 2},\n            toId: e.w,\n          },\n    );\n  });\n\n  return {\n    nodes,\n    edges,\n    width: maxWidth + MARGIN,\n    height: maxHeight + MARGIN,\n    groups: groupsPresent ? groups : {},\n  };\n};\n\nexport const ASSET_LINK_NAME_MAX_LENGTH = 10;\n\nexport const getAssetLinkDimensions = (label: string, opts: LayoutAssetGraphOptions) => {\n  return opts.horizontalDAGs\n    ? {width: 32 + 8 * Math.min(ASSET_LINK_NAME_MAX_LENGTH, label.length), height: 90}\n    : {width: 106, height: 90};\n};\n\nexport const padBounds = (a: IBounds, padding: {x: number; top: number; bottom: number}) => {\n  return {\n    x: a.x - padding.x,\n    y: a.y - padding.top,\n    width: a.width + padding.x * 2,\n    height: a.height + padding.top + padding.bottom,\n  };\n};\n\nexport const extendBounds = (a: IBounds, b: IBounds) => {\n  const xmin = Math.min(a.x, b.x);\n  const ymin = Math.min(a.y, b.y);\n  const xmax = Math.max(a.x + a.width, b.x + b.width);\n  const ymax = Math.max(a.y + a.height, b.y + b.height);\n  return {x: xmin, y: ymin, width: xmax - xmin, height: ymax - ymin};\n};\n\nexport const ASSET_NODE_NAME_MAX_LENGTH = 28;\n\nexport const getAssetNodeDimensions = (def: {\n  assetKey: {path: string[]};\n  opNames: string[];\n  isSource: boolean;\n  isObservable: boolean;\n  isPartitioned: boolean;\n  graphName: string | null;\n  description?: string | null;\n  computeKind: string | null;\n}) => {\n  const width = 265;\n\n  let height = 100; // top tags area + name + description\n\n  if (def.isSource && def.isObservable) {\n    height += 30; // status row\n  } else if (def.isSource) {\n    height += 0; // no status row\n  } else {\n    height += 26; // status row\n    if (def.isPartitioned) {\n      height += 40;\n    }\n  }\n\n  height += 30; // tags beneath\n\n  return {width, height};\n};\n","export const DEFAULT_RESULT_NAME = 'result';\n\nexport const titleOfIO = (i: {solid: {name: string}; definition: {name: string}}) => {\n  return i.solid.name !== DEFAULT_RESULT_NAME\n    ? `${i.solid.name}:${i.definition.name}`\n    : i.solid.name;\n};\n","import * as dagre from 'dagre';\n\nimport {titleOfIO} from '../app/titleOfIO';\n\nimport {IBounds, IPoint} from './common';\n\nexport type OpLayoutEdgeSide = {\n  point: IPoint;\n  opName: string;\n  edgeName: string;\n};\n\nexport type OpLayoutEdge = {\n  from: OpLayoutEdgeSide;\n  to: OpLayoutEdgeSide;\n};\n\nexport interface OpLayout {\n  // Overall frame of the box relative to 0,0 on the graph\n  bounds: IBounds;\n\n  // Frames of specific components - These need to be computed during layout\n  // (rather than at render time) to position edges into inputs/outputs.\n  op: IBounds;\n  inputs: {[inputName: string]: OpLayoutIO};\n  outputs: {[outputName: string]: OpLayoutIO};\n}\n\nexport interface OpLayoutIO {\n  layout: IBounds;\n  label: boolean;\n  collapsed: string[];\n  port: IPoint;\n}\n\nexport type OpGraphLayout = {\n  width: number;\n  height: number;\n  parent: ParentOpLayout | null;\n  edges: OpLayoutEdge[];\n  nodes: {[opName: string]: OpLayout};\n};\n\ninterface ParentOpLayout extends Omit<OpLayout, 'op'> {\n  mappingLeftEdge: number;\n  mappingLeftSpacing: number;\n  dependsOn: {[opName: string]: IPoint};\n  dependedBy: {[opName: string]: IPoint};\n  invocationBoundingBox: IBounds;\n}\n\nexport interface ILayoutOp {\n  name: string;\n  inputs: {\n    definition: {\n      name: string;\n    };\n    dependsOn: {\n      definition: {\n        name: string;\n      };\n      solid: {\n        name: string;\n      };\n    }[];\n  }[];\n  definition: {\n    description: string | null;\n    assetNodes: {\n      assetKey: {\n        path: string[];\n      };\n    }[];\n  };\n  outputs: {\n    definition: {\n      name: string;\n    };\n    dependedBy: {\n      definition: {\n        name: string;\n      };\n      solid: {\n        name: string;\n      };\n    }[];\n  }[];\n}\n\nconst OP_WIDTH = 370;\nconst OP_BASE_HEIGHT = 52;\nconst OP_ASSETS_ROW_HEIGHT = 22;\nconst IO_HEIGHT = 26;\nconst IO_INSET = 0;\nconst IO_MINI_WIDTH = 35;\nconst IO_THRESHOLD_FOR_MINI = 4;\nconst PORT_INSET_X = 13;\nconst PORT_INSET_Y = IO_HEIGHT / 2;\nconst PARENT_DEFINITION_PADDING = 70;\nconst PARENT_INVOCATION_PADDING = 70;\nconst EXTERNAL_DEPENDENCY_PADDING = 50;\n\nconst MARGIN_BASE = 100;\n\ntype OpLinkInfo = {\n  solid: {name: string};\n  definition: {name: string};\n};\n\nfunction flattenIO(arrays: OpLinkInfo[][]) {\n  const map: {[key: string]: OpLinkInfo} = {};\n  arrays.forEach((array) => array.forEach((item) => (map[titleOfIO(item)] = item)));\n  return Object.values(map);\n}\n\nexport type LayoutOpGraphOptions = {\n  parentOp?: ILayoutOp;\n};\n\nexport function layoutOpGraph(pipelineOps: ILayoutOp[], opts: LayoutOpGraphOptions): OpGraphLayout {\n  const g = new dagre.graphlib.Graph();\n\n  // First, identify how much space we need to pad the DAG by in order to show the\n  // parent op AROUND it. We pass this padding in to dagre, and then we have enough\n  // room to add our parent layout around the result.\n  let parentIOPadding = 0;\n  let marginy = MARGIN_BASE;\n  let marginx = MARGIN_BASE;\n  if (opts.parentOp) {\n    parentIOPadding =\n      Math.max(opts.parentOp.inputs.length, opts.parentOp.outputs.length) * IO_HEIGHT;\n    marginx = PARENT_DEFINITION_PADDING + PARENT_INVOCATION_PADDING;\n    marginy = marginx + parentIOPadding;\n  }\n\n  // Define a new top-down, left to right graph layout\n  g.setGraph({rankdir: 'TB', marginx, marginy, ranker: 'tight-tree'});\n  g.setDefaultEdgeLabel(() => ({}));\n\n  const edges: OpLayoutEdge[] = [];\n  const opNamesPresent: {[name: string]: boolean} = {};\n\n  pipelineOps.forEach((op) => {\n    opNamesPresent[op.name] = true;\n  });\n  pipelineOps.forEach((op) => {\n    // Lay out each op individually to get it's width and height based on it's\n    // inputs and outputs, and then attach it to the graph. Dagre will give us it's\n    // x,y position.\n    const layout = layoutOp(op, {x: 0, y: 0});\n    g.setNode(op.name, {\n      width: layout.bounds.width,\n      height: layout.bounds.height,\n    });\n\n    // Give Dagre the dependency edges and build a flat set of them so we\n    // can reference them in a single pass later\n    op.inputs.forEach((input) => {\n      input.dependsOn.forEach((dep) => {\n        if (opNamesPresent[dep.solid.name] && opNamesPresent[op.name]) {\n          g.setEdge({v: dep.solid.name, w: op.name}, {weight: 1});\n\n          edges.push({\n            from: {\n              point: {x: 0, y: 0},\n              opName: dep.solid.name,\n              edgeName: dep.definition.name,\n            },\n            to: {\n              point: {x: 0, y: 0},\n              opName: op.name,\n              edgeName: input.definition.name,\n            },\n          });\n        }\n      });\n    });\n  });\n\n  dagre.layout(g);\n\n  const ops: {[opName: string]: OpLayout} = {};\n  const dagreNodes: {[opName: string]: dagre.Node} = {};\n  g.nodes().forEach(function (opName) {\n    const node = g.node(opName);\n    if (!node) {\n      return;\n    }\n    dagreNodes[opName] = node;\n  });\n\n  // Due to a bug in Dagre when run without an \"align\" value, we need to calculate\n  // the total width of the graph coordinate space ourselves. We need the height\n  // because we've shifted long single rows into multiple rows.\n  let maxWidth = 0;\n  let maxHeight = 0;\n\n  // Read the Dagre layout and map \"nodes\" back to our solids, but with\n  // X,Y coordinates this time.\n  Object.entries(dagreNodes).forEach(([opName, node]) => {\n    const op = pipelineOps.find(({name}) => name === opName);\n    if (!op) {\n      return;\n    }\n\n    const x = node.x - node.width / 2; // Dagre's x/y is the center, we want top left\n    const y = node.y - node.height / 2;\n    ops[opName] = layoutOp(op, {x, y});\n    maxWidth = Math.max(maxWidth, x + node.width);\n    maxHeight = Math.max(maxHeight, y + node.height);\n  });\n\n  // Read the Dagre layout and map \"edges\" back to our data model. We don't\n  // currently use the \"closest points on the node\" Dagre suggests (but we could).\n  g.edges().forEach(function (e) {\n    const conn = edges.find((c) => c.from.opName === e.v && c.to.opName === e.w);\n    const points = g.edge(e).points;\n    if (conn && points.length > 0) {\n      conn.from.point = points[0]!;\n      conn.to.point = points[points.length - 1]!;\n    }\n  });\n\n  const result: OpGraphLayout = {\n    edges,\n    nodes: ops,\n    width: maxWidth + marginx,\n    height: maxHeight + marginy,\n    parent: null,\n  };\n\n  if (opts.parentOp) {\n    // Now that we've computed the pipeline layout fully, lay out the\n    // composite op around the completed DAG.\n    result.parent = layoutParentGraphOp(result, opts.parentOp, parentIOPadding);\n  }\n\n  return result;\n}\n\nfunction layoutParentGraphOp(layout: OpGraphLayout, op: ILayoutOp, parentIOPadding: number) {\n  const result: ParentOpLayout = {\n    invocationBoundingBox: {\n      x: 1,\n      y: 1,\n      width: layout.width - 1,\n      height: layout.height - 1,\n    },\n    bounds: {\n      x: PARENT_INVOCATION_PADDING,\n      y: PARENT_INVOCATION_PADDING + parentIOPadding,\n      width: layout.width - PARENT_INVOCATION_PADDING * 2,\n      height: layout.height - (PARENT_INVOCATION_PADDING + parentIOPadding) * 2,\n    },\n    mappingLeftEdge: PARENT_INVOCATION_PADDING - 20,\n    mappingLeftSpacing: 10,\n    inputs: {},\n    outputs: {},\n    dependsOn: layoutExternalConnections(\n      flattenIO(op.inputs.map((d) => d.dependsOn)),\n      -EXTERNAL_DEPENDENCY_PADDING,\n      layout.width,\n    ),\n    dependedBy: layoutExternalConnections(\n      flattenIO(op.outputs.map((d) => d.dependedBy)),\n      layout.height + EXTERNAL_DEPENDENCY_PADDING,\n      layout.width,\n    ),\n  };\n\n  const boundingBottom = result.bounds.y + result.bounds.height;\n\n  op.inputs.forEach((input, idx) => {\n    result.inputs[input.definition.name] = {\n      layout: {\n        x: result.bounds.x,\n        y: result.bounds.y - idx * IO_HEIGHT - IO_HEIGHT,\n        width: 0,\n        height: IO_HEIGHT,\n      },\n      collapsed: [],\n      label: true,\n      port: {\n        x: result.bounds.x + PORT_INSET_X,\n        y: result.bounds.y - idx * IO_HEIGHT - IO_HEIGHT / 2,\n      },\n    };\n  });\n\n  op.outputs.forEach((output, idx) => {\n    result.outputs[output.definition.name] = {\n      layout: {\n        x: result.bounds.x,\n        y: boundingBottom + idx * IO_HEIGHT,\n        width: 0,\n        height: IO_HEIGHT,\n      },\n      collapsed: [],\n      label: true,\n      port: {\n        x: result.bounds.x + PORT_INSET_X,\n        y: boundingBottom + idx * IO_HEIGHT + IO_HEIGHT / 2,\n      },\n    };\n  });\n\n  return result;\n}\n\nfunction layoutExternalConnections(links: OpLinkInfo[], y: number, layoutWidth: number) {\n  // fill evenly from 0 to layoutWidth from left to right, then center them if there's overflow.\n  const inset = PARENT_INVOCATION_PADDING + PORT_INSET_X;\n  const insetWidth = layoutWidth - inset * 2;\n  const spacing = Math.max(200, insetWidth / links.length);\n  const baseX = inset + Math.min(0, (insetWidth - links.length * spacing) / 2);\n  const yShift = spacing < 300 ? 20 : 0;\n\n  const result: {[opName: string]: IPoint} = {};\n  links.forEach((link, idx) => {\n    const shiftDirection = 1 - (idx % 2) * 2; // 1 or -1, alternating\n    result[titleOfIO(link)] = {\n      x: baseX + idx * spacing,\n      y: y + yShift * shiftDirection,\n    };\n  });\n  return result;\n}\n\nexport function layoutOp(op: ILayoutOp, root: IPoint): OpLayout {\n  // Starting at the root (top left) X,Y, return the layout information for an op with\n  // input blocks, then the main block, then output blocks (arranged vertically).\n  //\n  // This code \"appends\" boxes vertically, advancing accY as it goes.\n  let accY = root.y;\n\n  const appendMiniIODots = <T extends ILayoutOp['inputs'][0] | ILayoutOp['outputs'][0]>(\n    ios: T[],\n    sortKey: (io: T) => string,\n    clusteringKey: (io: T) => string,\n  ) => {\n    // Sort both input and output boxes displayed on the graph alphabetically based on the input name.\n    // This means that if two ops are connected to each other multiple times, the lines do not cross.\n    const sorted = [...ios].sort((a, b) => sortKey(a).localeCompare(sortKey(b)));\n\n    let x = 0;\n    let last: OpLayoutIO;\n    let lastKey: string | null = null;\n    const layouts: {[name: string]: OpLayoutIO} = {};\n    const spacing = Math.min(IO_MINI_WIDTH, OP_WIDTH / (sorted.length + 1));\n\n    // Add \"port\" layouts, collapsing the dots if they are connected to the same opposing solid\n    // (eg: two inputs connected to the same upstream output) with a \"[O] + 2\" style.\n    sorted.forEach((io, _idx) => {\n      const key = clusteringKey(io);\n      if (key !== lastKey) {\n        lastKey = key;\n        last = {\n          port: {\n            x: root.x + x + PORT_INSET_X,\n            y: accY + PORT_INSET_Y,\n          },\n          collapsed: [],\n          label: false,\n          layout: {\n            x: root.x + x,\n            y: accY,\n            width: IO_MINI_WIDTH,\n            height: IO_HEIGHT,\n          },\n        };\n        layouts[io.definition.name] = last;\n        x += spacing;\n      } else {\n        if (last.collapsed.length === 0) {\n          x += 15;\n        }\n        last.collapsed.push(io.definition.name);\n      }\n    });\n\n    // Center the items on the op rather than left justifying them\n    const centeringAdjustment = (OP_WIDTH - (x - PORT_INSET_X + IO_MINI_WIDTH)) / 2;\n    Object.values(layouts).forEach((l) => {\n      l.layout.x += centeringAdjustment;\n      l.port.x += centeringAdjustment;\n    });\n\n    // Place the next box beneath the\n    accY += IO_HEIGHT;\n\n    return layouts;\n  };\n\n  const appendStackedIOBoxes = (ios: ILayoutOp['inputs'] | ILayoutOp['outputs']) => {\n    const layouts: {[name: string]: OpLayoutIO} = {};\n    ios.forEach((io) => {\n      layouts[io.definition.name] = {\n        port: {x: root.x + PORT_INSET_X, y: accY + PORT_INSET_Y},\n        label: true,\n        collapsed: [],\n        layout: {\n          x: root.x,\n          y: accY,\n          width: 0,\n          height: IO_HEIGHT,\n        },\n      };\n      accY += IO_HEIGHT;\n    });\n    return layouts;\n  };\n\n  const inputLayouts =\n    op.inputs.length > IO_THRESHOLD_FOR_MINI\n      ? appendMiniIODots(\n          op.inputs,\n          (input) => input.definition.name,\n          (input) => input.dependsOn[0]?.solid.name || '',\n        )\n      : appendStackedIOBoxes(op.inputs);\n\n  const opLayout: IBounds = {\n    x: root.x,\n    y: Math.max(root.y, accY - IO_INSET),\n    width: OP_WIDTH,\n    height: OP_BASE_HEIGHT + IO_INSET * 2,\n  };\n\n  accY += OP_BASE_HEIGHT;\n\n  if (op.definition.assetNodes.length && op.definition.description) {\n    opLayout.height += OP_ASSETS_ROW_HEIGHT;\n    accY += OP_ASSETS_ROW_HEIGHT;\n  }\n\n  const outputLayouts =\n    op.outputs.length > IO_THRESHOLD_FOR_MINI\n      ? appendMiniIODots(\n          op.outputs,\n          (o) => o.dependedBy[0]?.definition.name || '',\n          (o) => o.dependedBy[0]?.solid.name || '',\n        )\n      : appendStackedIOBoxes(op.outputs);\n\n  return {\n    bounds: {\n      x: root.x - 5,\n      y: root.y - 5,\n      width: OP_WIDTH + 10,\n      height: accY - root.y + 10,\n    },\n    op: opLayout,\n    inputs: inputLayouts,\n    outputs: outputLayouts,\n  };\n}\n","/* eslint-disable no-restricted-globals */\n\nimport {layoutAssetGraph} from '../asset-graph/layout';\nimport {layoutOpGraph} from '../graph/layout';\n\n/**\n * NOTE: Please avoid adding React as a transitive dependency to this file, as it can break\n * the development workflow. https://github.com/pmmmwh/react-refresh-webpack-plugin/issues/24\n *\n * If you see an error like `$RefreshReg$ is not defined` during development, check the\n * dependencies of this file. If you find that React has been included as a dependency, please\n * try to remove it.\n */\n\nself.addEventListener('message', (event) => {\n  const {data} = event;\n\n  switch (data.type) {\n    case 'layoutOpGraph': {\n      const {ops, opts} = data;\n      self.postMessage(layoutOpGraph(ops, opts));\n      break;\n    }\n    case 'layoutAssetGraph': {\n      const {graphData, opts} = data;\n      self.postMessage(layoutAssetGraph(graphData, opts));\n    }\n  }\n});\n"],"names":["linkSource","d","source","linkTarget","target","curveHorizontal","context","x0","y0","x1","y1","moveTo","bezierCurveTo","linkHorizontal","link","curve","x","_point_js__WEBPACK_IMPORTED_MODULE_0__","y","buffer","argv","_array_js__WEBPACK_IMPORTED_MODULE_1__","t","call","arguments","s","apply","d3_path__WEBPACK_IMPORTED_MODULE_2__","Z","_","length","_constant_js__WEBPACK_IMPORTED_MODULE_3__","MapCache","__webpack_require__","memoize","func","resolver","memoized","args","key","cache","has","get","result","set","Cache","module","exports","_array_like_to_array","arr","len","i","arr2","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","slice","constructor","name","Array","from","test","_sliced_to_array_sliced_to_array","_array_with_holes","isArray","_iterable_to_array_limit","_s","_e","_i","Symbol","iterator","_arr","_n","_d","next","done","push","value","err","_non_iterable_rest","_to_consumable_array_to_consumable_array","_array_without_holes","_iterable_to_array","iter","_non_iterable_spread","getFeatureFlags","getJSONForKey","stored","undefined","window","localStorage","getItem","JSON","parse","flag","includes","locale","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","Collator","navigator","language","sensitivity","pathHorizontalDiagonal","groupIdForNode","node","definition","repository","location","groupName","join","getUpstreamNodes","assetKey","graphData","currentUpstream","upstream","keys","stringify","path","map","graphId","__typename","concat","flat","filter","index","findIndex","key2","data","layoutAssetGraph","opts","g","dagre","Graph","compound","ranker","setGraph","horizontalDAGs","rankdir","marginx","marginy","nodesep","edgesep","ranksep","setDefaultEdgeLabel","shouldRender","renderedNodes","values","nodes","expandedGroups","groups","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","id","expanded","repositoryName","repositoryLocationName","bounds","width","height","return","groupsPresent","forEach","groupId","setNode","getAssetNodeDimensions","setParent","linksToAssetsOutsideGraphedSet","groupIdForAssetId","fromEntries","entries","param","downstream","upstreamId","downstreamIds","graphDataDownstream","downstreamId","v","w","wGroup","vGroup","setEdge","weight","label","getAssetLinkDimensions","maxWidth","maxHeight","dagreNode","group","Math","max","_iteratorNormalCompletion1","_didIteratorError1","_iteratorError1","_step1","_iterator1","nodeLayout","extendBounds","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","padBounds","top","bottom","edges","e","vXInset","wXInset","fromId","to","toId","min","a","padding","b","xmin","ymin","xmax","ymax","def","isSource","isObservable","isPartitioned","titleOfIO","solid","flattenIO","arrays","array","item","layoutExternalConnections","links","layoutWidth","insetWidth","inset","spacing","baseX","yShift","idx","layoutOp","op","root","accY","appendMiniIODots","ios","sortKey","clusteringKey","last","sorted","sort","localeCompare","lastKey","layouts","OP_WIDTH","io","_idx","port","IO_HEIGHT","collapsed","layout","centeringAdjustment","IO_MINI_WIDTH","l","appendStackedIOBoxes","inputLayouts","inputs","input","dependsOn","opLayout","OP_BASE_HEIGHT","assetNodes","description","outputLayouts","outputs","dependedBy","self","addEventListener","event","type","parentIOPadding","boundingBottom","opNamesPresent","ops","dagreNodes","postMessage","parentOp","PARENT_DEFINITION_PADDING","PARENT_INVOCATION_PADDING","pipelineOps","dep","point","opName","edgeName","find","conn","c","points","edge","parent","invocationBoundingBox","mappingLeftEdge","mappingLeftSpacing","output"],"sourceRoot":""}