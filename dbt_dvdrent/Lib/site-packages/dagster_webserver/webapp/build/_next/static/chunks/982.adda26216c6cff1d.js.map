{"version":3,"file":"static/chunks/982.adda26216c6cff1d.js","mappings":"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","sources":["webpack://_N_E/../ui-components/src/components/Page.tsx","webpack://_N_E/../ui-components/src/components/PageHeader.tsx","webpack://_N_E/../ui-core/src/assets/AssetGroupSuggest.tsx","webpack://_N_E/../ui-core/src/assets/AssetsGroupsGlobalGraphRoot.tsx","webpack://_N_E/../ui-core/src/workspace/ReloadAllButton.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Page = styled.div`\n  height: 100%;\n  overflow-y: auto;\n  padding-bottom: 64px;\n  width: 100%;\n`;\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nimport {colorBackgroundLight} from '../theme/color';\n\nimport {Box} from './Box';\nimport {IconName} from './Icon';\n\ninterface Props {\n  title: React.ReactNode;\n  tags?: React.ReactNode;\n  icon?: IconName;\n  description?: React.ReactNode;\n  metadata?: React.ReactNode;\n  right?: React.ReactNode;\n  tabs?: React.ReactNode;\n}\n\nexport const PageHeader = (props: Props) => {\n  const {title, tags, right, tabs} = props;\n  return (\n    <PageHeaderContainer\n      background={colorBackgroundLight()}\n      padding={{top: 16, left: 24, right: 12}}\n      border=\"bottom\"\n    >\n      <Box flex={{direction: 'row', justifyContent: 'space-between'}} padding={{bottom: 16}}>\n        <Box flex={{direction: 'row', alignItems: 'center', gap: 12, wrap: 'wrap'}}>\n          {title}\n          {tags}\n        </Box>\n        {right}\n      </Box>\n      {tabs}\n    </PageHeaderContainer>\n  );\n};\n\nconst PageHeaderContainer = styled(Box)`\n  width: 100%;\n\n  /**\n   * Blueprint breadcrumbs annoyingly have a built-in height.\n   */\n  .bp4-breadcrumbs {\n    height: auto;\n  }\n`;\n","import {Box, Checkbox, Icon, MenuItem, Suggest} from '@dagster-io/ui-components';\nimport isEqual from 'lodash/isEqual';\nimport uniqBy from 'lodash/uniqBy';\nimport * as React from 'react';\n\nimport {AssetGroupSelector} from '../graphql/types';\nimport {ClearButton} from '../ui/ClearButton';\nimport {buildRepoPathForHuman} from '../workspace/buildRepoAddress';\n\ntype Asset = {\n  definition: {\n    groupName: string | null;\n    repository: {name: string; location: {name: string}};\n  } | null;\n};\n\nexport function useAssetGroupSelectorsForAssets(assets: Asset[] | undefined) {\n  return React.useMemo(\n    () =>\n      uniqBy(\n        (assets || []).map(buildAssetGroupSelector).filter((a) => !!a) as AssetGroupSelector[],\n        (a) => JSON.stringify(a),\n      ).sort((a, b) => a.groupName.localeCompare(b.groupName)),\n    [assets],\n  );\n}\n\n// We're using a <Suggest /> component because it's convenient to have typeahead behavior,\n// but we want to support mulit-selection. To achieve this, we show checkboxes on the items\n// and override the label text (\"2 groups\"). Blueprint doesn't need to know what the real\n// selection is, just that one exists.\nconst FAKE_SELECTED_ITEM: AssetGroupSelector = {\n  groupName: '-',\n  repositoryLocationName: '-',\n  repositoryName: '-',\n};\n\nexport const AssetGroupSuggest = ({\n  assetGroups,\n  value,\n  onChange,\n}: {\n  assetGroups: AssetGroupSelector[];\n  value: AssetGroupSelector[];\n  onChange: (g: AssetGroupSelector[]) => void;\n}) => {\n  const repoKey = (g: AssetGroupSelector) => `${g.repositoryName}@${g.repositoryLocationName}`;\n  const repoKey1 = assetGroups[0] ? repoKey(assetGroups[0]) : '';\n  const repoContextNeeded = !assetGroups.every((g) => repoKey1 === repoKey(g));\n\n  return (\n    <Suggest<AssetGroupSelector>\n      selectedItem={value.length ? FAKE_SELECTED_ITEM : null}\n      items={assetGroups}\n      menuWidth={300}\n      inputProps={{\n        style: {width: 200},\n        placeholder: 'Filter asset groups…',\n        rightElement: value.length ? (\n          <ClearButton onClick={() => onChange([])} style={{marginTop: 5, marginRight: 4}}>\n            <Icon name=\"cancel\" />\n          </ClearButton>\n        ) : undefined,\n      }}\n      inputValueRenderer={() =>\n        value.length === 1 ? value[0]!.groupName : value.length > 1 ? `${value.length} groups` : ``\n      }\n      itemPredicate={(query, partition) =>\n        query.length === 0 || partition.groupName.toLowerCase().includes(query.toLowerCase())\n      }\n      itemsEqual={isEqual}\n      itemRenderer={(assetGroup, props) => (\n        <MenuItem\n          active={props.modifiers.active}\n          onClick={props.handleClick}\n          key={JSON.stringify(assetGroup)}\n          text={\n            <Box\n              flex={{direction: 'row', gap: 6, alignItems: 'center'}}\n              margin={{left: 4}}\n              style={{maxWidth: '500px'}}\n            >\n              <Checkbox checked={value.some((g) => isEqual(g, assetGroup))} size=\"small\" readOnly />\n              <Box\n                flex={{direction: 'row', alignItems: 'center', grow: 1, shrink: 1}}\n                style={{overflow: 'hidden'}}\n              >\n                <div style={{overflow: 'hidden'}}>\n                  {assetGroup.groupName}\n                  {repoContextNeeded ? (\n                    <span style={{opacity: 0.5, paddingLeft: 4}}>\n                      {buildRepoPathForHuman(\n                        assetGroup.repositoryName,\n                        assetGroup.repositoryLocationName,\n                      )}\n                    </span>\n                  ) : undefined}\n                </div>\n              </Box>\n            </Box>\n          }\n        />\n      )}\n      noResults={<MenuItem disabled={true} text=\"No asset groups\" />}\n      closeOnSelect={false}\n      resetOnQuery={false}\n      onItemSelect={(item) => {\n        const nextValue = value.filter((g) => !isEqual(item, g));\n        if (nextValue.length === value.length) {\n          nextValue.push(item);\n        }\n        onChange(nextValue);\n      }}\n    />\n  );\n};\n\nexport function buildAssetGroupSelector(a: Asset) {\n  return a.definition && a.definition.groupName\n    ? {\n        groupName: a.definition.groupName,\n        repositoryName: a.definition.repository.name,\n        repositoryLocationName: a.definition.repository.location.name,\n      }\n    : null;\n}\n","import {Page, PageHeader, Heading} from '@dagster-io/ui-components';\nimport isEqual from 'lodash/isEqual';\nimport * as React from 'react';\nimport {useHistory, useParams} from 'react-router-dom';\n\nimport {AssetGraphExplorer} from '../asset-graph/AssetGraphExplorer';\nimport {AssetGraphFetchScope} from '../asset-graph/useAssetGraphData';\nimport {AssetLocation} from '../asset-graph/useFindAssetLocation';\nimport {AssetGroupSelector} from '../graphql/types';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {useQueryPersistedState} from '../hooks/useQueryPersistedState';\nimport {useStartTrace} from '../performance';\nimport {ExplorerPath} from '../pipelines/PipelinePathUtils';\nimport {ReloadAllButton} from '../workspace/ReloadAllButton';\nimport {WorkspaceContext} from '../workspace/WorkspaceContext';\n\nimport {buildAssetGroupSelector} from './AssetGroupSuggest';\nimport {assetDetailsPathForKey} from './assetDetailsPathForKey';\nimport {\n  globalAssetGraphPathFromString,\n  globalAssetGraphPathToString,\n} from './globalAssetGraphPathToString';\n\ninterface AssetGroupRootParams {\n  0: string;\n}\n\nexport const AssetsGroupsGlobalGraphRoot = () => {\n  const {0: path} = useParams<AssetGroupRootParams>();\n  const {visibleRepos} = React.useContext(WorkspaceContext);\n  const history = useHistory();\n\n  const [filters, setFilters] = useQueryPersistedState<{\n    groups: AssetGroupSelector[];\n    computeKindTags: string[];\n  }>({\n    encode: ({groups, computeKindTags}) => ({\n      groups: groups.length ? JSON.stringify(groups) : undefined,\n      computeKindTags: computeKindTags.length ? JSON.stringify(computeKindTags) : undefined,\n    }),\n    decode: (qs) => ({\n      groups: qs.groups ? JSON.parse(qs.groups) : [],\n      computeKindTags: qs.computeKindTags ? JSON.parse(qs.computeKindTags) : [],\n    }),\n  });\n\n  useDocumentTitle(`Global Asset Lineage`);\n  const trace = useStartTrace('GlobalAssetGraph');\n\n  const onChangeExplorerPath = React.useCallback(\n    (path: ExplorerPath, mode: 'push' | 'replace') => {\n      history[mode]({\n        pathname: globalAssetGraphPathToString(path),\n        search: history.location.search,\n      });\n    },\n    [history],\n  );\n\n  const onNavigateToSourceAssetNode = React.useCallback(\n    (node: AssetLocation) => {\n      history.push(assetDetailsPathForKey(node.assetKey, {view: 'definition'}));\n    },\n    [history],\n  );\n\n  const fetchOptions = React.useMemo(() => {\n    const options: AssetGraphFetchScope = {\n      hideEdgesToNodesOutsideQuery: false,\n      hideNodesMatching: (node) => {\n        if (\n          !visibleRepos.some(\n            (repo) =>\n              repo.repositoryLocation.name === node.repository.location.name &&\n              repo.repository.name === node.repository.name,\n          )\n        ) {\n          return true;\n        }\n        if (filters.groups?.length) {\n          const nodeGroup = buildAssetGroupSelector({definition: node});\n          if (!filters.groups.some((g) => isEqual(g, nodeGroup))) {\n            return true;\n          }\n        }\n\n        return false;\n      },\n    };\n    return options;\n  }, [filters.groups, visibleRepos]);\n\n  return (\n    <Page style={{display: 'flex', flexDirection: 'column', paddingBottom: 0}}>\n      <PageHeader\n        title={<Heading>Global Asset Lineage</Heading>}\n        right={<ReloadAllButton label=\"Reload definitions\" />}\n      />\n      <AssetGraphExplorer\n        fetchOptions={fetchOptions}\n        filters={filters}\n        setFilters={setFilters}\n        options={{preferAssetRendering: true, explodeComposites: true}}\n        explorerPath={globalAssetGraphPathFromString(path)}\n        onChangeExplorerPath={onChangeExplorerPath}\n        onNavigateToSourceAssetNode={onNavigateToSourceAssetNode}\n        isGlobalGraph\n        trace={trace}\n      />\n    </Page>\n  );\n};\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default AssetsGroupsGlobalGraphRoot;\n","import {Button, Dialog, DialogBody, DialogFooter, Icon, Tooltip} from '@dagster-io/ui-components';\nimport * as React from 'react';\n\nimport {useUnscopedPermissions} from '../app/Permissions';\nimport {PythonErrorInfo} from '../app/PythonErrorInfo';\nimport {\n  reloadFnForWorkspace,\n  useRepositoryLocationReload,\n} from '../nav/useRepositoryLocationReload';\n\nimport {RepositoryLocationErrorDialog} from './RepositoryLocationErrorDialog';\n\nexport const ReloadAllButton = ({label = 'Reload all'}: {label?: string}) => {\n  const {\n    permissions: {canReloadWorkspace},\n    disabledReasons,\n  } = useUnscopedPermissions();\n  const {reloading, tryReload, error, errorLocationId} = useRepositoryLocationReload({\n    scope: 'workspace',\n    reloadFn: reloadFnForWorkspace,\n  });\n\n  const [isOpen, setIsOpen] = React.useState(!!error);\n  React.useEffect(() => setIsOpen(!!error), [error]);\n\n  if (!canReloadWorkspace) {\n    return (\n      <Tooltip content={disabledReasons.canReloadWorkspace}>\n        <Button outlined icon={<Icon name=\"refresh\" />} disabled>\n          {label}\n        </Button>\n      </Tooltip>\n    );\n  }\n\n  return (\n    <>\n      <Button outlined onClick={tryReload} icon={<Icon name=\"refresh\" />} loading={reloading}>\n        {label}\n      </Button>\n      {errorLocationId ? (\n        <RepositoryLocationErrorDialog\n          error={error}\n          location={errorLocationId}\n          reloading={reloading}\n          onTryReload={tryReload}\n          onDismiss={() => setIsOpen(false)}\n          isOpen={isOpen}\n        />\n      ) : (\n        <Dialog\n          icon=\"error\"\n          title=\"Reload error\"\n          canEscapeKeyClose={false}\n          canOutsideClickClose={false}\n          style={{width: '90%'}}\n          isOpen={isOpen}\n        >\n          <DialogBody>{error && <PythonErrorInfo error={error} />}</DialogBody>\n          <DialogFooter>\n            <Button onClick={() => setIsOpen(false)}>Dismiss</Button>\n          </DialogFooter>\n        </Dialog>\n      )}\n    </>\n  );\n};\n"],"names":["Page","styled","div","withConfig","PageHeader","props","title","tags","right","tabs","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__","jsxs","PageHeaderContainer","background","colorBackgroundLight","padding","top","left","border","Box","flex","direction","justifyContent","bottom","alignItems","gap","wrap","useAssetGroupSelectorsForAssets","assets","React","uniqBy","map","buildAssetGroupSelector","filter","a","JSON","stringify","sort","b","groupName","localeCompare","FAKE_SELECTED_ITEM","repositoryLocationName","repositoryName","AssetGroupSuggest","param","assetGroups","value","onChange","repoKey","g","concat","repoKey1","repoContextNeeded","every","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","Suggest","selectedItem","length","items","menuWidth","inputProps","style","width","placeholder","rightElement","ClearButton","onClick","marginTop","marginRight","Icon","name","undefined","inputValueRenderer","itemPredicate","query","partition","toLowerCase","includes","itemsEqual","isEqual","itemRenderer","assetGroup","MenuItem","active","modifiers","handleClick","text","margin","maxWidth","Checkbox","checked","some","size","readOnly","grow","shrink","overflow","span","opacity","paddingLeft","buildRepoPathForHuman","noResults","disabled","closeOnSelect","resetOnQuery","onItemSelect","item","nextValue","push","definition","repository","location","AssetsGroupsGlobalGraphRoot","path","useParams","visibleRepos","WorkspaceContext","history","useHistory","useQueryPersistedState","encode","groups","computeKindTags","decode","qs","parse","filters","setFilters","useDocumentTitle","trace","useStartTrace","onChangeExplorerPath","mode","pathname","globalAssetGraphPathToString","search","onNavigateToSourceAssetNode","node","assetDetailsPathForKey","assetKey","view","fetchOptions","hideEdgesToNodesOutsideQuery","hideNodesMatching","repo","repositoryLocation","nodeGroup","display","flexDirection","paddingBottom","Heading","ReloadAllButton","label","AssetGraphExplorer","options","preferAssetRendering","explodeComposites","explorerPath","globalAssetGraphPathFromString","isGlobalGraph","__webpack_exports__","_param_label","useUnscopedPermissions","permissions","canReloadWorkspace","disabledReasons","useRepositoryLocationReload","scope","reloadFn","reloadFnForWorkspace","reloading","tryReload","error","errorLocationId","isOpen","setIsOpen","Fragment","Button","outlined","icon","loading","RepositoryLocationErrorDialog","onTryReload","onDismiss","Dialog","canEscapeKeyClose","canOutsideClickClose","DialogBody","PythonErrorInfo","DialogFooter","Tooltip","content"],"sourceRoot":""}