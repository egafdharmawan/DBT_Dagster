{"version":3,"file":"static/chunks/674.69dbba5c21772b35.js","mappings":"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","sources":["webpack://_N_E/../ui-components/src/components/PageHeader.tsx","webpack://_N_E/../ui-core/src/instance/InstanceConfig.tsx","webpack://_N_E/../ui-core/src/nav/InstanceWarningIcon.tsx","webpack://_N_E/../ui-core/src/nav/WorkspaceStatus.tsx","webpack://_N_E/../ui-core/src/instance/InstanceTabs.tsx","webpack://_N_E/../ui-core/src/instance/useCanSeeConfig.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\n\nimport {colorBackgroundLight} from '../theme/color';\n\nimport {Box} from './Box';\nimport {IconName} from './Icon';\n\ninterface Props {\n  title: React.ReactNode;\n  tags?: React.ReactNode;\n  icon?: IconName;\n  description?: React.ReactNode;\n  metadata?: React.ReactNode;\n  right?: React.ReactNode;\n  tabs?: React.ReactNode;\n}\n\nexport const PageHeader = (props: Props) => {\n  const {title, tags, right, tabs} = props;\n  return (\n    <PageHeaderContainer\n      background={colorBackgroundLight()}\n      padding={{top: 16, left: 24, right: 12}}\n      border=\"bottom\"\n    >\n      <Box flex={{direction: 'row', justifyContent: 'space-between'}} padding={{bottom: 16}}>\n        <Box flex={{direction: 'row', alignItems: 'center', gap: 12, wrap: 'wrap'}}>\n          {title}\n          {tags}\n        </Box>\n        {right}\n      </Box>\n      {tabs}\n    </PageHeaderContainer>\n  );\n};\n\nconst PageHeaderContainer = styled(Box)`\n  width: 100%;\n\n  /**\n   * Blueprint breadcrumbs annoyingly have a built-in height.\n   */\n  .bp4-breadcrumbs {\n    height: auto;\n  }\n`;\n","import 'codemirror/addon/search/searchcursor';\n\nimport {gql, useQuery} from '@apollo/client';\nimport {\n  Box,\n  PageHeader,\n  Spinner,\n  Code,\n  Heading,\n  StyledRawCodeMirror,\n  Subheading,\n  colorKeylineDefault,\n  colorBackgroundDefault,\n  colorTextDefault,\n  colorBackgroundLime,\n} from '@dagster-io/ui-components';\nimport CodeMirror from 'codemirror';\nimport * as React from 'react';\nimport {createGlobalStyle} from 'styled-components';\n\nimport {useQueryRefreshAtInterval, FIFTEEN_SECONDS} from '../app/QueryRefresh';\nimport {useTrackPageView} from '../app/analytics';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\n\nimport {InstancePageContext} from './InstancePageContext';\nimport {InstanceTabs} from './InstanceTabs';\nimport {InstanceConfigQuery, InstanceConfigQueryVariables} from './types/InstanceConfig.types';\n\nconst InstanceConfigStyle = createGlobalStyle`\n  .CodeMirror.cm-s-instance-config {\n    background-color: ${colorBackgroundDefault()};\n    box-shadow: 0 1px 0 ${colorKeylineDefault()};\n    color: ${colorTextDefault()};\n    height: 100%;\n  }\n\n  .CodeMirror.cm-s-instance-config {\n    .config-highlight {\n      background-color: ${colorBackgroundLime()};\n    }\n`;\n\nexport const InstanceConfig = React.memo(() => {\n  useTrackPageView();\n  useDocumentTitle('Configuration');\n\n  const {pageTitle} = React.useContext(InstancePageContext);\n  const queryResult = useQuery<InstanceConfigQuery, InstanceConfigQueryVariables>(\n    INSTANCE_CONFIG_QUERY,\n    {\n      notifyOnNetworkStatusChange: true,\n    },\n  );\n\n  const refreshState = useQueryRefreshAtInterval(queryResult, FIFTEEN_SECONDS);\n  const {data} = queryResult;\n  const config = data?.instance.info;\n\n  const handlers = React.useMemo(() => {\n    return {\n      onReady: (editor: CodeMirror.Editor) => {\n        const documentHash = document.location.hash;\n        if (documentHash) {\n          const target = new RegExp(`^${documentHash.slice(1)}:`);\n          const cursor = editor.getSearchCursor(target);\n          const found = cursor.findNext();\n          if (found) {\n            editor.markText(cursor.from(), cursor.to(), {className: 'config-highlight'});\n            editor.scrollIntoView(cursor.from());\n          }\n        }\n      },\n    };\n  }, []);\n\n  if (!data) {\n    return (\n      <Box padding={{vertical: 64}}>\n        <Spinner purpose=\"section\" />\n      </Box>\n    );\n  }\n\n  return (\n    <>\n      <InstanceConfigStyle />\n      <PageHeader\n        title={<Heading>{pageTitle}</Heading>}\n        tabs={<InstanceTabs tab=\"config\" refreshState={refreshState} />}\n      />\n      <Box padding={{vertical: 16, horizontal: 24}} border=\"bottom\">\n        <Subheading>\n          Dagster version: <Code style={{fontSize: '16px'}}>{data.version}</Code>\n        </Subheading>\n      </Box>\n      {/* Div wrapper on CodeMirror to allow entire page to scroll */}\n      <div>\n        <StyledRawCodeMirror\n          value={config || ''}\n          options={{readOnly: true, lineNumbers: true, mode: 'yaml'}}\n          handlers={handlers}\n          theme={['instance-config']}\n        />\n      </div>\n    </>\n  );\n});\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default InstanceConfig;\n\nexport const INSTANCE_CONFIG_QUERY = gql`\n  query InstanceConfigQuery {\n    version\n    instance {\n      id\n      info\n    }\n  }\n`;\n","import {Icon, colorAccentYellow} from '@dagster-io/ui-components';\nimport * as React from 'react';\n\nimport {DeploymentStatusContext} from '../instance/DeploymentStatusProvider';\n\nimport {WarningTooltip} from './WarningTooltip';\n\nexport const InstanceWarningIcon = React.memo(() => {\n  const {daemons} = React.useContext(DeploymentStatusContext);\n\n  if (!daemons) {\n    return null;\n  }\n\n  return (\n    <WarningTooltip\n      content={daemons.content}\n      position=\"bottom\"\n      modifiers={{offset: {enabled: true, options: {offset: [0, 28]}}}}\n    >\n      <Icon name=\"warning\" color={colorAccentYellow()} />\n    </WarningTooltip>\n  );\n});\n","import {\n  Icon,\n  Tooltip,\n  Spinner,\n  colorAccentGray,\n  colorAccentYellow,\n} from '@dagster-io/ui-components';\nimport * as React from 'react';\n\nimport {DeploymentStatusContext} from '../instance/DeploymentStatusProvider';\n\nimport {WarningTooltip} from './WarningTooltip';\n\nexport const WorkspaceStatus = React.memo(({placeholder}: {placeholder: boolean}) => {\n  const {codeLocations} = React.useContext(DeploymentStatusContext);\n\n  if (!codeLocations) {\n    return placeholder ? <div style={{width: '16px'}} /> : null;\n  }\n\n  if (codeLocations.type === 'spinner') {\n    return (\n      <Tooltip content={codeLocations.content} placement=\"bottom\">\n        <Spinner purpose=\"body-text\" fillColor={colorAccentGray()} />\n      </Tooltip>\n    );\n  }\n\n  return (\n    <WarningTooltip\n      content={codeLocations.content}\n      position=\"bottom\"\n      modifiers={{offset: {enabled: true, options: {offset: [0, 28]}}}}\n    >\n      <Icon name=\"warning\" color={colorAccentYellow()} />\n    </WarningTooltip>\n  );\n});\n","import {QueryResult} from '@apollo/client';\nimport {Box, Tabs} from '@dagster-io/ui-components';\nimport * as React from 'react';\n\nimport {QueryRefreshCountdown, QueryRefreshState} from '../app/QueryRefresh';\nimport {InstanceWarningIcon} from '../nav/InstanceWarningIcon';\nimport {WorkspaceStatus} from '../nav/WorkspaceStatus';\nimport {TabLink} from '../ui/TabLink';\n\nimport {InstancePageContext} from './InstancePageContext';\nimport {useCanSeeConfig} from './useCanSeeConfig';\n\ninterface Props<TData> {\n  refreshState?: QueryRefreshState;\n  queryData?: QueryResult<TData, any>;\n  tab: string;\n}\n\nexport const InstanceTabs = <TData extends Record<string, any>>(props: Props<TData>) => {\n  const {refreshState, tab} = props;\n\n  const {healthTitle} = React.useContext(InstancePageContext);\n  const canSeeConfig = useCanSeeConfig();\n\n  return (\n    <Box flex={{direction: 'row', justifyContent: 'space-between', alignItems: 'flex-end'}}>\n      <Tabs selectedTabId={tab}>\n        <TabLink\n          id=\"locations\"\n          title=\"Code locations\"\n          to=\"/locations\"\n          icon={<WorkspaceStatus placeholder={false} />}\n        />\n        <TabLink id=\"health\" title={healthTitle} to=\"/health\" icon={<InstanceWarningIcon />} />\n        {canSeeConfig ? (\n          <TabLink id=\"concurrency\" title=\"Concurrency limits\" to=\"/concurrency\" />\n        ) : null}\n        {canSeeConfig ? <TabLink id=\"config\" title=\"Configuration\" to=\"/config\" /> : null}\n      </Tabs>\n      {refreshState ? (\n        <Box padding={{bottom: 8}}>\n          <QueryRefreshCountdown refreshState={refreshState} />\n        </Box>\n      ) : null}\n    </Box>\n  );\n};\n","import {gql, useQuery} from '@apollo/client';\n\nimport {\n  InstanceConfigHasInfoQuery,\n  InstanceConfigHasInfoQueryVariables,\n} from './types/useCanSeeConfig.types';\n\nexport const useCanSeeConfig = () => {\n  const {data} = useQuery<InstanceConfigHasInfoQuery, InstanceConfigHasInfoQueryVariables>(\n    INSTANCE_CONFIG_HAS_INFO,\n  );\n  return !!data?.instance.hasInfo;\n};\n\nconst INSTANCE_CONFIG_HAS_INFO = gql`\n  query InstanceConfigHasInfo {\n    instance {\n      id\n      hasInfo\n    }\n  }\n`;\n"],"names":["PageHeader","props","title","tags","right","tabs","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__","jsxs","PageHeaderContainer","background","colorBackgroundLight","padding","top","left","border","Box","flex","direction","justifyContent","bottom","alignItems","gap","wrap","styled","InstanceConfigStyle","createGlobalStyle","colorBackgroundDefault","colorKeylineDefault","colorTextDefault","colorBackgroundLime","InstanceConfig","React","useTrackPageView","useDocumentTitle","pageTitle","InstancePageContext","queryResult","useQuery","INSTANCE_CONFIG_QUERY","notifyOnNetworkStatusChange","refreshState","useQueryRefreshAtInterval","FIFTEEN_SECONDS","data","config","instance","info","handlers","onReady","editor","documentHash","document","location","hash","target","RegExp","concat","slice","cursor","getSearchCursor","findNext","markText","from","to","className","scrollIntoView","Fragment","jsx","Heading","InstanceTabs","tab","vertical","horizontal","Subheading","Code","style","fontSize","version","div","StyledRawCodeMirror","value","options","readOnly","lineNumbers","mode","theme","Spinner","purpose","__webpack_exports__","gql","InstanceWarningIcon","daemons","DeploymentStatusContext","jsx_runtime","WarningTooltip","content","position","modifiers","offset","enabled","Icon","name","color","colorAccentYellow","WorkspaceStatus","param","placeholder","codeLocations","type","Tooltip","placement","fillColor","colorAccentGray","width","healthTitle","canSeeConfig","useCanSeeConfig","Tabs","selectedTabId","TabLink","id","icon","QueryRefreshCountdown","INSTANCE_CONFIG_HAS_INFO","hasInfo"],"sourceRoot":""}